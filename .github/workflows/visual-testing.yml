name: AI Visual Testing Workflow

on:
  # Manual triggering only - no automatic runs
  workflow_dispatch:
    inputs:
      run_type:
        description: 'Type of test to run'
        required: true
        default: 'comprehensive'
        type: choice
        options:
          - comprehensive
          - baseline-only
          - bug-test
          - revert-bugs

jobs:
  visual-testing:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Required for gh-pages deployment
      pull-requests: write  # Required for creating PRs
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # This ensures we have full history and depth
          # Needed for creating PRs from the workflow
          fetch-depth: 0
          # Use PAT instead of GITHUB_TOKEN for cross-repo operations
          token: ${{ secrets.PAT || secrets.GITHUB_TOKEN }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Setup Ollama and dependencies
        run: |
          # Install process management utilities
          sudo apt-get update
          sudo apt-get install -y lsof net-tools psmisc procps
          
          # Install Ollama
          curl -fsSL https://ollama.com/install.sh | sh
          ollama serve &
          sleep 10  # Give Ollama time to start
          ollama pull llama3.2
          ollama pull llava
      
      - name: Setup environment
        run: npm run setup
      
      - name: Revert any existing bugs
        if: github.event.inputs.run_type == 'revert-bugs' || github.event.inputs.run_type == 'comprehensive'
        run: npm run revert-bug
        
      - name: Run baseline capture only
        if: github.event.inputs.run_type == 'baseline-only'
        run: npm run capture-baselines
        
      - name: Run bug test
        if: github.event.inputs.run_type == 'bug-test'
        run: |
          npm run comprehensive-bug
          npm run comprehensive-test
        
      - name: Run comprehensive test
        if: github.event.inputs.run_type == 'comprehensive'
        run: npm run comprehensive-test
        
      - name: Process confirmations
        run: npm run process-confirmations
      
      - name: Upload reports as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: visual-testing-reports
          path: reports/
          
      - name: Set up report publication
        run: |
          # Create a directory for the GitHub Pages content
          mkdir -p gh-pages
          
          # Copy the latest report to the gh-pages directory
          latest_report=$(find reports -name "phase4-report-*.html" -type f | sort -r | head -n 1)
          if [ -n "$latest_report" ]; then
            cp "$latest_report" gh-pages/index.html
            echo "Copied latest report: $latest_report"
          else
            echo "No report found, creating placeholder"
            echo "<html><body><h1>AI Visual Testing Report</h1><p>No reports available yet.</p></body></html>" > gh-pages/index.html
          fi
          
          # Copy the confirmation UI to gh-pages
          cp public/confirm.html gh-pages/
          
          # Copy confirmation data if it exists
          if [ -d "reports/intent-confirmations" ]; then
            cp -r reports/intent-confirmations/*.json gh-pages/ 2>/dev/null || :
            echo "Copied confirmation data"
          else
            echo "No confirmation data found, creating empty files"
            echo "{}" > gh-pages/confirmations.json
            echo "{}" > gh-pages/pending.json
          fi
          
          # Copy screenshots if they exist
          mkdir -p gh-pages/screenshots
          if [ -d "screenshots" ]; then
            cp -r screenshots/* gh-pages/screenshots/ 2>/dev/null || :
            echo "Copied screenshots"
          fi
          
          # Create a simple README for the GitHub Pages site
          echo "# AI Visual Testing Reports" > gh-pages/README.md
          echo "This site contains reports and confirmation pages for the AI Visual Testing project." >> gh-pages/README.md
      
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./gh-pages
          force_orphan: true
      
      - name: Create Pull Request for confirmed changes
        id: create-pr
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.PAT || secrets.GITHUB_TOKEN }}
          commit-message: "Visual Testing: Update baselines with confirmed changes"
          title: "Visual Testing: Update baselines with confirmed changes"
          body: |
            This PR updates baseline screenshots based on confirmed visual changes.
            
            Changes were automatically confirmed and processed by the AI visual testing workflow.
          branch: visual-testing-updates-${{ github.run_id }}
          base: ${{ github.head_ref || github.ref_name }}
          labels: |
            automated-fix
            visual-testing
